type Photo @model @auth(rules: [{ allow: public, provider: iam, operations: [read] }, { allow: private, provider: iam, operations: [read] }, {allow: owner, ownerField: "user_id"}]) {
  id: ID!
  original: S3Object!
  description: String
  ready_for_sell: Boolean!
  price: Float
  permalink: AWSURL
  sold_at: AWSDateTime
  latitude: String
  longitude: String
  altitude: Float
  width: Int
  height: Int
  size: Int
  content_type: String
  user_id: ID! @index(name: "byUser")
  user: User @belongsTo(fields: ["user_id"])
}

type User @model @auth(rules: [{ allow: public, provider: iam, operations: [read] }, { allow: private, provider: iam }, {allow: owner, ownerField: "id"}]) {
  id: ID!
  username: String!
  name: String
  bio: String
  photos: [Photo] @hasMany(indexName: "byUser", fields: ["id"])
  bank_number: String
}

type S3Object {
  bucket: String!
  key: String!
  region: String!
}

type Query {
  getCheckoutLink(id: String!): String @function(name: "getCheckoutLink-${env}") @auth(rules: [{ allow: public, provider: iam }, { allow: private, provider: iam }])
}
