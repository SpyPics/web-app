type Photo @model @auth(rules: [{ allow: public, provider: iam, operations: [read] }, { allow: private, provider: iam }, {allow: owner, ownerField: "user_id"}]) {
  id: ID!
  original: S3Object!
  description: String
  ready_for_sell: Boolean!
  price: Float
  permalink: AWSURL
  sold_at: String
  session_id: String
  latitude: String
  longitude: String
  altitude: Float
  width: Int
  height: Int
  size: Int
  content_type: String
  user_id: ID! @index(name: "byUser")
  user: User @belongsTo(fields: ["user_id"])
}

type User @model @auth(rules: [{ allow: public, provider: iam, operations: [read] }, { allow: private, provider: iam }, {allow: owner, ownerField: "id"}]) {
  id: ID!
  username: String!
  name: String
  bio: String
  date_of_birth: AWSDate
  address: String
  post_code: String
  city: String
  phone: String
  country: String
  cardholder_name: String
  bank_number: String
  stripe_account_id: String
  photos: [Photo] @hasMany(indexName: "byUser", fields: ["id"])
}

type S3Object {
  bucket: String!
  key: String!
  region: String!
}

type Query {
  getCheckoutLink(id: String!): String @function(name: "PaymentService-${env}") @auth(rules: [{ allow: public, provider: iam }, { allow: private, provider: iam }])

  getPaymentStatus(id: String!): String @function(name: "PaymentService-${env}") @auth(rules: [{ allow: public, provider: iam }, { allow: private, provider: iam }])

  downloadImage(id: String!): String @function(name: "PaymentService-${env}") @auth(rules: [{ allow: public, provider: iam }, { allow: private, provider: iam }])

  getPriceList: String @function(name: "PaymentService-${env}") @auth(rules: [{ allow: public, provider: iam }, { allow: private, provider: iam }])
}

type Mutation {
  activateMonetization(id: String!, username: String!, name: String!, date_of_birth: String!, address: String!, post_code: String!, city: String!, phone: String!, cardholder_name: String!, country: String!, bank_number: String!): String @function(name: "PaymentService-${env}") @auth(rules: [{ allow: private }])

  activateStripeExpress(id: String!): String @function(name: "PaymentService-${env}") @auth(rules: [{ allow: private }])
}
